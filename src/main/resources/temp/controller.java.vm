package ${package.Controller};

import ${package.Entity}.${entity};
import ${package.Service}.${table.serviceName};
import com.baomidou.mybatisplus.core.conditions.update.UpdateWrapper;
import org.springframework.web.bind.annotation.RequestMapping;
import io.swagger.annotations.ApiOperation;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;

#if(${restControllerStyle})
import org.springframework.web.bind.annotation.RestController;
#else
import org.springframework.stereotype.Controller;
#end
import com.dee.frame.springbootframe.controller.${superControllerClassPackage};

import java.util.Map;

/**
 * @auther ${author}
 * @create ${cfg.dateTime}
 * @describe $!{table.comment}前端控制器
 */
#if(${restControllerStyle})
@RestController
#else
@Controller
#end
@RequestMapping("#if(${package.ModuleName})/${package.ModuleName}#end/#if(${controllerMappingHyphenStyle})${controllerMappingHyphen}#else${table.entityPath}#end")
public class ${table.controllerName} extends ${superControllerClass} {

    #set($serviceImplName=$table.serviceName.substring(0, 1).toLowerCase()+$table.serviceName.substring(1))

    @Autowired
    private ${table.serviceName} $serviceImplName;

    #set($voName=$entity.substring(0, 1).toLowerCase()+$entity.substring(1))

    @ApiOperation("新增${entity}")
    @PostMapping("/addBean")
    public Map<String, Object> addBean(@RequestBody ${entity} $voName) {
        try{
            ${serviceImplName}.save(${voName});
            return toJson(SUCCESS);
        }catch(Exception e){
            e.printStackTrace();
            return toJson(ERROR);
        }
    }

    @ApiOperation("编辑${entity}")
    @PostMapping("/editBean")
    public Map<String, Object> editBean(@RequestBody ${entity} $voName) {
        try{
            UpdateWrapper<${entity}> updateWrapper = new UpdateWrapper<${entity}>()
                                .eq("id", ${voName}.getId());
            ${serviceImplName}.update(${voName}, updateWrapper);
            return toJson(SUCCESS);
        }catch(Exception e){
            e.printStackTrace();
            return toJson(ERROR);
        }
    }

    @ApiOperation("删除${entity}")
    @PostMapping("/delBean")
    public Map<String, Object> delBean(@RequestBody ${entity} $voName) {
        try{
            ${serviceImplName}.removeById(${voName}.getId());
            return toJson(SUCCESS);
        }catch(Exception e){
            e.printStackTrace();
            return toJson(ERROR);
        }
    }

}
